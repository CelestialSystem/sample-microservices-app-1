name: Auth API Workflow

on:
  push:
    branches: [ "ci_testing" ]
    paths: 
     - 'auth-api/**' 
  
env:
 REGISTRY: 859047589462.dkr.ecr.us-east-1.amazonaws.com
 REPOSITORY: sample-microsvc-app-auth-api
 

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write
  
jobs:

  getBranch_and_commitHash:
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.branch.outputs.git_branch }}
      output2: ${{ steps.hash.outputs.git_hash }}
    steps:
      - name: Get Branch
        id: branch
        run: echo "::set-output name=git_branch::${GITHUB_REF#refs/heads/}"

      - name: Get Hash
        id: hash
        run: echo "::set-output name=git_hash::$(echo $GITHUB_SHA | cut -c1-7)"

  build:

    runs-on: ubuntu-latest
    needs: getBranch_and_commitHash

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
    - name: Build the Docker image
      working-directory: auth-api
      run: docker build . --file Dockerfile --tag $REGISTRY/$REPOSITORY:${{needs.getBranch_and_commitHash.outputs.output1}}-${{needs.getBranch_and_commitHash.outputs.output2}}
       
    - name: Debug output
      run: | 
          docker images
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
       image-ref: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{needs.getBranch_and_commitHash.outputs.output1}}-${{needs.getBranch_and_commitHash.outputs.output2}}
       format: 'sarif'
       output: 'trivy-results-docker.sarif'
       severity: 'CRITICAL,HIGH'
          
    - name: Debug output
      run: |
         echo "#########TRIVY################"
         cat trivy-results-docker.sarif
         
    - name: Upload Trivy scan results to Github security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-docker.sarif'
        
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker push $REGISTRY/$REPOSITORY:${{needs.getBranch_and_commitHash.outputs.output1}}-${{needs.getBranch_and_commitHash.outputs.output2}}
        
